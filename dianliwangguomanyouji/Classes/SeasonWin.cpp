////  SeasonWin.cpp//  dianliwangguomanyouji////  Created by szsycx on 3/17/15.////#include "SeasonWin.h"#include "ui/cocosGUI.h"#include "CastleScene.h"#include "LevelScene.h"#include "Tail.h"using namespace cocos2d::ui;bool SeasonWin::init(){    if(!Layer::init()){        return false;    }    Size visibleSize = Director::getInstance()->getVisibleSize();    int currentSeason = UserDefault::getInstance()->getBoolForKey("current_season",1);    auto title = Sprite::create(StringUtils::format("seasonwin/t%d.png",currentSeason));    title->setPosition(Vec2(visibleSize.width/2.0,visibleSize.height-title->getContentSize().height));    addChild(title);    //    auto name = Text::create(UserDefault::getInstance()->getStringForKey("name", "小明"), "fonts/zhongwen.ttf", 60);//    name->setPosition(Vec2(visibleSize.width/2.0-visibleSize.width*5.0/100.0,visibleSize.height-name->getContentSize().height));//    addChild(name);    int count = 0;    for(int i = 0; i<6;i++){                        count += UserDefault::getInstance()->getIntegerForKey(StringUtils::format("max_level%d",(i+1)).c_str(),0);    }        auto enermy = Sprite::create(StringUtils::format("seasonwin/b%d.png",currentSeason));    enermy->setPosition(Vec2(visibleSize.width*2.5/10.0,visibleSize.height/2.0));    addChild(enermy);        bool isMale = UserDefault::getInstance()->getBoolForKey("male", true);    Sprite * hero;    if(isMale){        hero = Sprite::create("seasonwin/userboyhappy.png");    }else{        hero = Sprite::create("seasonwin/usergirlhappy.png");    }    hero->setPosition(Vec2(visibleSize.width*7.5/10,visibleSize.height/2.0));    addChild(hero);        auto backCastle = Button::create("seasonwin/backcastle.png");    backCastle->setPosition(Vec2(visibleSize.width*2.5/10.0,visibleSize.height*1.0/10.0));    backCastle->addTouchEventListener([&](Ref*pSender,Widget::TouchEventType type){        if(type==Widget::TouchEventType::ENDED){            if(count==60){                                  Director::getInstance()->replaceScene(Tail::createScene());                  Director::getInstance()->resume();            }else{                  Director::getInstance()->resume();                Director::getInstance()->replaceScene(CastleScene::createScene());            }        }    });    addChild(backCastle);        auto backLevel = Button::create("seasonwin/back.png");    backLevel->setPosition(Vec2(visibleSize.width*7.5/10.0,visibleSize.height*1.0/10.0));    backLevel->addTouchEventListener([&](Ref*pSender,Widget::TouchEventType type){        if(type==Widget::TouchEventType::ENDED){            if(count==60){                Director::getInstance()->resume();                Director::getInstance()->replaceScene(Tail::createScene());            }else{                Director::getInstance()->resume();                Director::getInstance()->replaceScene(LevelScene::createScene());            }        }    });    addChild(backLevel);                int beanNumber = UserDefault::getInstance()->getIntegerForKey("bean",1);         int currentLevel = UserDefault::getInstance()->getIntegerForKey("current_level", 1);    int maxLevel = UserDefault::getInstance()->getIntegerForKey(StringUtils::format("max_level%d",currentSeason).c_str(), 1);    int trueMaxLevel = UserDefault::getInstance()->getIntegerForKey(StringUtils::format("true_max_level%d",currentSeason).c_str(), 1);        bool haveDone = UserDefault::getInstance()->getBoolForKey(StringUtils::format("magic%d%d",currentSeason,currentLevel).c_str(),false);        if(currentLevel==trueMaxLevel){        if(beanNumber+20<9999){            beanNumber+=20;        }else{            beanNumber = 9999;        }    }else{        if(beanNumber+5<9999){            beanNumber+=5;        }else{            beanNumber = 9999;        }}        if(maxLevel<12){        if(currentLevel==maxLevel){            if(haveDone){                UserDefault::getInstance()->setIntegerForKey(StringUtils::format("max_level%d",currentSeason).c_str(), maxLevel+2);            }else{                UserDefault::getInstance()->setIntegerForKey(StringUtils::format("max_level%d",currentSeason).c_str(), maxLevel+1);            }        }    }    if(currentLevel>=trueMaxLevel){        trueMaxLevel++;    }    UserDefault::getInstance()->setIntegerForKey(StringUtils::format("true_max_level%d",currentSeason).c_str(), trueMaxLevel);    UserDefault::getInstance()->setIntegerForKey("bean", beanNumber);    UserDefault::getInstance()->flush();    return true;}